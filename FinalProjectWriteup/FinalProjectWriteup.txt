
My goal for this project was to use CloudFormation to create and instance (MapMoney2.0) that will have the LAMP stack packages installed and running and deploying my own static webpage on my instance. Once I deployed my stack, I waited until the instance was created. I ssh'd into my new instance and checked if all the applications were installed. Once I verified they were installed, I went on to configure my webpage. I was able to do everything in the console so I clicked on the Update button to make changes to my template. Once I configured my webpage, I updated the stack and waited for the update to be completed. Once it was completed, I was able to instantly check if my webpage was up by clicking on the Outputs tab and slecting the website URL. I could've checked manually, which I also did, by going to the EC2 instances and using my public ip address or DNS and directing it to my webpage html. 

This project really makes the users experience so much simpler and easy to use. You can create your own template based on your needs and easily deploy it to your users. You can configure everything you want using CloudFormation so when your user gains access to it, everything is already configured the way you want for them. The user doesn't need to worry about not having the right configurations and limits the trials and errors they would have otherwise had. You can also use the same template for multiple different users and for different functionalities by modifying the template you outlined with more specific configurations.

A lot of the work went into understanding how templates work and what you can do with them. CloudFormation is a very powerful tool that you can manipulate in any way in the confines of AWS. Once you understand the workings of templates and more specifically how you structured your own template, the main part of the maintenance for the stack you deployed is keeping your template up to date. If you configured your template correctly, the maintenance will not be as much of a hassle. The maintenance required for my LAMP stack template would be to my static webpage if I wanted to add things or configure it to be a dynamic webpage. The great part about CloudFormation is how stable the configurations are once you've created your template. If there is something you want to reconfigure, you can go on the console, or use the command line, to make the changes and update your stack. This in turn will update the configurations you've made on all the systems that you created the stack for. You can also configure a parameter to update the version of apache or mysql if you wanted to automate the maintenance of the stack. For this specific stack, I wouldn't necessarily want to automate that for my users because I wouldn't want to interfere too much with their environment. This template would be used to set up the initial environment. If a user had some requests they would like me to implement, I would update the template for their instance instead of generating that for all users. Having the template that you originally created makes it easier for maintenance where I could add more configurations and updates, then I could update the template, to update the stack, and deploy the new changes 

CloudFormation makes it very simple to configure security setting for you stack that you would want to implement. As a system administrator, I would recommend setting the stack actions setting to disable easy deletion of your stacks. I would also set permissions to only allow the system administrator to edit stacks and the resources for it. The template you create ensures that if the stack gets deleted, you are able to spin it back up with ease. You could create your own security groups for your instances you are creating and specify the public key for that specific instance as well when you are creating the stack

The best documentation for the system administration work would be the AWS CloudFormation page: https://aws.amazon.com/cloudformation/. This page explains what CloudFormation and has the most useful documentation. I would reccommend that the system administrator reads through the page as it walks you through how it works with a lot of informational videos that they could reference. Once they have read through enough to understand how CloudFormation, stacks, and templates work, I would then explain what my template is used for, this could also be read in the description of the stack and/or in the descriptions on the template itself. I would give them a copy of the template so they have a personal copy even though the stack contains the template itself there too. I would then inform the system administrator how to update the stack which is very simple to do on the console because there is a button that you can selecte called "Update". If you want to update, you can edit the template in the CloudFormation Designer which has graphics that you can drag and drop and structure or you could directly type into on the bottom portion. If you wanted to, you could also make changes using the command line but I would not recommend that route just for the sheer simplicity of the console. For the users, I would just make sure they are using the correct key to ssh into their instance as well as their DNS/ip address associated with it. Once they have those things, they can go on their instance and use all the packages that have been installed.
